<?php

/**
 * Implements hook_menu_alter().
 *
 * Moves the menu link to the end.
 */
function islandora_solr_facetapi_menu_alter(&$items) {
  $items['admin/islandora/search/islandora_solr/facets']['weight'] = 10;
}

/**
 * Implements hook_facetapi_searcher_info().
 */
function islandora_solr_facetapi_facetapi_searcher_info() {
  return array(
    'islandora_solr@searcher' => array(
      'label' => t('Islandora SOLR Search'),
      'adapter' => 'islandora_solr',
      'path' => 'admin/islandora/search/islandora_solr',
      'types' => array('islandora_solr_index'),
      'supports facet missing' => TRUE,
      'supports facet mincount' => TRUE,
      'include default facets' => FALSE,
    ),
  );
}

/**
 * Implements hook_facetapi_facet_info().
 */
function islandora_solr_facetapi_facetapi_facet_info(array $searcher_info) {
  $facets = array();

  // Facets are usually associated with the type of content stored in the index.
  if (isset($searcher_info['types']['islandora_solr_index'])) {

    $luke = islandora_solr_get_luke();
    foreach ($luke['fields'] as $field_name => $field) {
      $facets[$field_name] = array(
        'name' => $field_name,
        'label' => $field_name,
        'description' => t('Type: @type', array('@type' => $field['type'], '@schema' => $field['schema'])),
        'allowed operators' => array(FACETAPI_OPERATOR_AND => TRUE, FACETAPI_OPERATOR_OR => TRUE),
      );

      switch ($field['type']) {
        case 'date':
          $facets[$field_name]['query types'] = array('term', 'date'/*, 'date_range'*/);
          $facets[$field_name]['min callback'] = 'islandora_solr_facetapi_date_min';
          $facets[$field_name]['max callback'] = 'islandora_solr_facetapi_date_max';
          break;
        case 'integer':
          // $facets[$field_name]['query types'] = array('term', 'numeric_range');
          break;
      }
    }
  }

  return $facets;
}

/**
 * Implements hook_facetapi_adapters().
 */
function islandora_solr_facetapi_facetapi_adapters() {
  return array(
    'islandora_solr' => array(
      'handler' => array(
        'class' => 'IslandoraSolrFacetapiAdapter',
      ),
    ),
  );
}

/**
 * Implements hook_facetapi_query_types().
 */
function islandora_solr_facetapi_facetapi_query_types() {
  return array(
    'islandora_solr_term' => array(
      'handler' => array(
        'class' => 'IslandoraSolrFacetapiTerm',
        'adapter' => 'islandora_solr',
      ),
    ),
    'islandora_solr_date' => array(
      'handler' => array(
        'class' => 'IslandoraSolrFacetapiDate',
        'adapter' => 'islandora_solr',
      ),
    ),
    'islandora_solr_numeric_range' => array(
      'handler' => array(
        'class' => 'IslandoraSolrFacetapiNumericRange',
        'adapter' => 'islandora_solr',
      ),
    ),
    'islandora_solr_date_range' => array(
      'handler' => array(
        'class' => 'IslandoraSolrFacetapiDateRange',
        'adapter' => 'islandora_solr',
      ),
    ),
  );
}

/**
 * Attaches facet api to the islandora solr query class.
 */
function islandora_solr_facetapi_islandora_solr_query_alter($query) {
  $searcher = 'islandora_solr@searcher';
  $adapter = facetapi_adapter_load($searcher);
  if ($adapter) {
    $adapter->addActiveFilters($query);
  }
}

/**
 * Removes Islandora solr breadcrumbs, which cause duplicates.
 */
function islandora_solr_facetapi_islandora_breadcrumbs_alter(&$breadcrumbs, $context, $object = NULL) {
  $breadcrumbs = array();
}

/**
 * Implements hook_form_alter().
 *
 * Disable core islandora solr facet settings.
 */
function islandora_solr_facetapi_form_islandora_solr_admin_settings_alter(&$form, &$form_state) {
  $form['islandora_solr_tabs']['facet_settings']['#access'] = false;
}

function islandora_solr_facetapi_date_min() {
  return 1;
}

function islandora_solr_facetapi_date_max() {
  return 1577836800;
}
